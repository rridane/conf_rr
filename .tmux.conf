   # Smart pane switching with awareness of Vim splits.
 # See: https://github.com/christoomey/vim-tmux-navigator
 is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
     bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
     bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
     bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
     bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
     tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
     if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
         "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
         if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
             "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

             bind-key -T copy-mode-vi 'M-h' select-pane -L
             bind-key -T copy-mode-vi 'M-j' select-pane -D
             bind-key -T copy-mode-vi 'M-k' select-pane -U
             bind-key -T copy-mode-vi 'M-l' select-pane -R
	     bind P paste-buffer
	     bind-key -T copy-mode-vi v send-keys -X begin-selection
             bind-key -T copy-mode-vi y send-keys -X copy-selection
             bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

bind -n M-C-k resize-pane -U 5
bind -n M-C-j resize-pane -D 5
bind -n M-C-h resize-pane -L 5
bind -n M-C-l resize-pane -R 5

#set -g pane-border-status top
#set -g pane-border-format "#P: #{pane_current_command}"

set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sidebar'

set -g @plugin 'wfxr/tmux-power'
set -g @tmux_power_theme 'moon'

set -g mouse on

set -g prefix C-b

bind-key -T prefix s choose-tree -swZ

set -g default-terminal "screen-256color"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

#set -g terminal-overrides ',xterm-256color:Tc'
#set -g default-terminal "tmux-256color"
#set -as terminal-overrides ',xterm*:sitm=\E[3m'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# pane renaming

set -g default-command '                      \
function renamePane () {                      \
  read -p "Enter Pane Name: " pane_name;      \
  printf "\033]2;%s\033\\r:r" "${pane_name}"; \
};                                            \
export -f renamePane;                         \
bash -i'

###############
# pane border #
###############

set -g pane-border-status top
#colors for pane borders
setw -g pane-border-style fg=yellow
setw -g pane-active-border-style fg=colour118
setw -g automatic-rename off
setw -g pane-border-format ' #{pane_index} #{pane_title} : #{pane_current_path} '
# active pane normal, other shaded outâ€‹
set -g pane-border-status top
set -g pane-border-format "#{pane_index} #T #{pane_current_command}"

bind-key -T prefix R send-keys "renamePane" C-m

set-option -g status-left-length 50   # default 10
set-option -g status-left "[#[fg=white]S: #S, #[fg=colour11]W #I-#W, #[fg=colour3]P: #P #[fg=white]]"

set-option -g default-shell "/bin/bash"

set -g @plugin 'tmux-plugins/tmux-resurrect'


# vim keys in copy or choice mode
set-window-option -g mode-keys vi

# copying selection vim style
# http://jasonwryan.com/blog/2011/06/07/copy-and-paste-in-tmux/
# https://github.com/myfreeweb/dotfiles/blob/master/tmux.conf
bind-key v copy-mode			# enter copy mode; default [
bind-key p paste-buffer				# paste; default ]
#bind-key -T copy-mode-vi M-v send-keys -X cancel		# exit copy mode; or hit q
bind-key -T copy-mode-vi V send-keys -X select-line		# visual line
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard"


bind-key -T copy-mode-vi L send-keys -X next-word
bind-key -T copy-mode-vi H send-keys -X previous-word 

bind-key -T copy-mode-vi l send-keys -X cursor-right
bind-key -T copy-mode-vi h send-keys -X cursor-left

bind-key -T copy-mode-vi J send-keys -X cursor-down \; send-keys -X cursor-down \; send-keys -X cursor-down \; send-keys -X cursor-down 
 
bind-key -T copy-mode-vi K send-keys -X cursor-up \; send-keys -X cursor-up \; send-keys -X cursor-up \; send-keys -X cursor-up

bind-key -T copy-mode-vi j send-keys -X cursor-down
bind-key -T copy-mode-vi k send-keys -X cursor-up

#bind -t vi-copy y copy-pipe "xclip -sel clip -i"
